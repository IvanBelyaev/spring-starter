plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'io.freefair.lombok' version "8.4"
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}
apply from: 'version.gradle'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs += "$buildDir/generated/sources/annotationProcessor/java/main"
        }
    }
}

configurations {
    querydsl.extendsFrom annotationProcessor, implementation, runtimeOnly, compileOnly
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdoc}"
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.data:spring-data-envers'
    implementation "com.querydsl:querydsl-jpa:${versions.querydsl}:jakarta"
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor "com.querydsl:querydsl-apt:${versions.querydsl}:jakarta"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.testcontainers:postgresql:${versions.testContainers}"
}

querydsl {
    jpa = true
    querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}

compileQuerydsl {
    enabled = false
    options.annotationProcessorPath = configurations.querydsl
}

test {
    useJUnitPlatform()
}
